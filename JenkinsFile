pipeline {
    agent any

    environment {
        DOCKERHUB_USER = 'priyangshuchakraborty'
        DOCKERHUB_REPO_FE = 'angular-frontend'
        DOCKERHUB_REPO_BE = 'backend-app'
        AWS_REGION = 'us-east-2'
    }

    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/priyangshu-chakraborty/CRMDashboardTrackify.git'
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build --configuration production'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    sh """
                    docker build -t $DOCKERHUB_USER/$DOCKERHUB_REPO_BE:latest backend
                    docker build -t $DOCKERHUB_USER/$DOCKERHUB_REPO_FE:latest frontend
                    echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin
                    docker push $DOCKERHUB_USER/$DOCKERHUB_REPO_BE:latest
                    docker push $DOCKERHUB_USER/$DOCKERHUB_REPO_FE:latest
                    """
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('infra') {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                script {
                    sh """
                    ssh -o StrictHostKeyChecking=no -i ~/.ssh/win-pwd.pem ec2-user@$(terraform -chdir=infra output -raw ec2_public_ip) \\
                    'docker compose -f ~/docker-compose.yml pull && docker compose -f ~/docker-compose.yml up -d'
                    """
                }
            }
        }
    }
}
